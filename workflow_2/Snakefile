import os

RICKETTSIA_GENOMES_DIR = "/scratch/lustre/home/vira9982/Borreliella_target/genomes/Rickettsia/"

RICKETTSIA_SPECIES = [
    os.path.splitext(f)[0]
    for f in os.listdir(RICKETTSIA_GENOMES_DIR)
    if f.endswith(".fna")
]

RICKETTSIA_REFERENCE_GENOME = RICKETTSIA_SPECIES[0] if RICKETTSIA_SPECIES else None

if not RICKETTSIA_REFERENCE_GENOME:
    raise Exception(f"Nerasta .fna failų {RICKETTSIA_GENOMES_DIR} kataloge. Patikrinkite kelią ir failų plėtinius.")

OUTPUT_ROOT_DIR = "results/"
PROKKA_OUTPUT_DIR = f"{OUTPUT_ROOT_DIR}prokka_annotations/"
PROKKA_GFF_FILES = expand(
    f"{PROKKA_OUTPUT_DIR}{{species}}/{{species}}.gff",
    species=RICKETTSIA_SPECIES
)
PANAROO_OUTPUT_DIR = f"{OUTPUT_ROOT_DIR}panaroo_pangenome/"
PANAROO_CORE_GENE_ALIGNMENT = f"{PANAROO_OUTPUT_DIR}core_gene_alignment.aln"
MAUVE_OUTPUT_DIR = f"{OUTPUT_ROOT_DIR}mauve_alignment/"
MAUVE_ALIGNMENT_FILE = f"{MAUVE_OUTPUT_DIR}rickettsia_alignment.mauve"
RICKETTSIA_GENOME_FILES = expand(f"{RICKETTSIA_GENOMES_DIR}{{species}}.fna", species=RICKETTSIA_SPECIES)

rule all:
    input:
        PANAROO_CORE_GENE_ALIGNMENT,
        MAUVE_ALIGNMENT_FILE

rule prokka:
    """
    Annotates a single Rickettsia genome using Prokka.
    This rule will be executed for each genome individually.
    """
    input:
        genome = f"{RICKETTSIA_GENOMES_DIR}{{species}}.fna"
    output:
        gff = f"{PROKKA_OUTPUT_DIR}{{species}}/{{species}}.gff",
        faa = f"{PROKKA_OUTPUT_DIR}{{species}}/{{species}}.faa",
        ffn = f"{PROKKA_OUTPUT_DIR}{{species}}/{{species}}.ffn"
    params:
        outdir = f"{PROKKA_OUTPUT_DIR}{{species}}",
        prefix = "{species}"
    threads: 4
    conda: "envs/prokka_env.yaml"
    shell:
        """
        mkdir -p {params.outdir}
        rm -rf {params.outdir}/*

        prokka \\
            --force \\
            --outdir {params.outdir} \\
            --prefix {params.prefix} \\
            --genus Rickettsia \\
            --usegenus \\
            --cpus {threads} \\
            {input.genome}
        """

rule panaroo:
    """
    Performs pangenome analysis on all Prokka-annotated genomes using Panaroo.
    Panaroo is a modern alternative to Roary with better error correction.
    """
    input:
        gff_files = PROKKA_GFF_FILES
    output:
        core_alignment = PANAROO_CORE_GENE_ALIGNMENT,
        gene_presence_absence = f"{PANAROO_OUTPUT_DIR}gene_presence_absence.csv",
        pan_genome_reference = f"{PANAROO_OUTPUT_DIR}pan_genome_reference.fa",
        summary_statistics = f"{PANAROO_OUTPUT_DIR}summary_statistics.txt",
        core_gene_alignment_filtered = f"{PANAROO_OUTPUT_DIR}core_gene_alignment_filtered.aln"
    params:
        output_dir = PANAROO_OUTPUT_DIR
    threads: 8
    conda: "envs/panaroo_env.yaml" 
    shell:
        """
        mkdir -p {params.output_dir}
        rm -rf {params.output_dir}/*

        panaroo -i {input.gff_files} \\
                -o {params.output_dir} \\
                --threads {threads} \\
                -a core \\
                --aligner mafft \\
                --core_threshold 0.95 \\
                --len_dif_percent 0.98 \\
                --merge_paralogs \\
                --clean-mode strict
        
        echo "Panaroo finished. Check results in {params.output_dir}"
        """

rule progressive_mauve:
    """
    Performs Whole Genome Alignment on all Rickettsia genomes using progressiveMauve.
    """
    input:
        genomes = RICKETTSIA_GENOME_FILES
    output:
        alignment = MAUVE_ALIGNMENT_FILE,
        backbone = f"{MAUVE_OUTPUT_DIR}rickettsia_alignment.backbone",
        sslist = f"{MAUVE_OUTPUT_DIR}rickettsia_alignment.sslist"
    params:
        outdir = MAUVE_OUTPUT_DIR,
        output_prefix = f"{MAUVE_OUTPUT_DIR}rickettsia_alignment"
    threads: 8
    conda: "envs/mauve_env.yaml"
    shell:
        """
        mkdir -p {params.outdir}

        progressiveMauve \\
            --output={output.alignment} \\
            --backbone-output={output.backbone} \\
            --match-input \\
            {input.genomes}

        # Patikrinkite ar sukurti failai
        echo "Mauve alignment finished. Files created:"
        ls -la {params.outdir}
        """